#1
import React, { useState } from "react";
import { Link, useLocation, Outlet } from "react-router-dom";
import {
  RiHome4Line,
  RiShoppingBagLine,
  RiUserLine,
  RiBarChartLine,
  RiSettings3Line,
  RiLogoutBoxRLine,
  RiSearchLine,
} from "react-icons/ri";
import { MdNavigateNext } from "react-icons/md";
import { GrFormPrevious } from "react-icons/gr";

export default function AdminPanel() {
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);
  const location = useLocation();

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  const navItems = [
    { name: "Dashboard", icon: RiHome4Line, path: "/admin" },
    { name: "Products", icon: RiShoppingBagLine, path: "/admin/products" },
    { name: "Customers", icon: RiUserLine, path: "/admin/customers" },
    { name: "Analytics", icon: RiBarChartLine, path: "/admin/analytics" },
    { name: "Settings", icon: RiSettings3Line, path: "/admin/settings" },
  ];

  return (
    <div className="min-h-screen bg-gray-100 flex">
      {/* Sidebar */}
      <div
        className={`${
          isSidebarOpen ? "w-64" : "w-20"
        } bg-white text-gray-800 flex flex-col transition-all duration-300 ease-in-out shadow-lg fixed h-screen z-10`}
      >
        <div className="p-4 flex items-center gap-3 border-b border-gray-200">
          <div className="w-10 h-10 bg-[#FF851B] rounded-lg flex items-center justify-center">
            <RiShoppingBagLine className="w-6 h-6 text-white" />
          </div>
          {isSidebarOpen && (
            <span className="text-lg font-semibold text-gray-800 transition-opacity duration-300 ease-in-out">
              Admin
            </span>
          )}
        </div>
        <nav className="flex-1 p-4 overflow-y-auto">
          {navItems.map((item) => (
            <Link
              key={item.name}
              to={item.path}
              className={`w-full flex items-center gap-3 p-3 rounded-lg hover:bg-[#FF851B]/10 text-gray-700 hover:text-[#FF851B] transition-colors duration-200 mb-2 cursor-pointer ${
                location.pathname === item.path
                  ? "bg-[#FF851B]/20 text-[#FF851B]"
                  : ""
              }`}
            >
              <item.icon className="w-6 h-6 flex-shrink-0" />
              {isSidebarOpen && (
                <span className="text-sm font-medium transition-opacity duration-300 ease-in-out">
                  {item.name}
                </span>
              )}
            </Link>
          ))}
        </nav>
        <div className="p-4 border-t border-gray-200">
          <button className="w-full flex items-center gap-3 p-3 rounded-lg hover:bg-[#FF851B]/10 text-gray-700 hover:text-[#FF851B] transition-colors duration-200 cursor-pointer">
            <RiLogoutBoxRLine className="w-6 h-6 flex-shrink-0" />
            {isSidebarOpen && (
              <span className="text-sm font-medium transition-opacity duration-300 ease-in-out">
                Logout
              </span>
            )}
          </button>
        </div>

        {/* Sidebar Toggle Button */}
        <button
          onClick={toggleSidebar}
          className="absolute z-20 -right-4 top-[5%] transform -translate-y-1/2 bg-gray-200 p-2 rounded-full shadow-lg hover:bg-gray-300 transition-colors duration-200 cursor-pointer"
        >
          {isSidebarOpen ? <GrFormPrevious /> : <MdNavigateNext />}
        </button>
      </div>

      {/* Main Content */}
      <div
        className={`flex-1 flex flex-col transition-all duration-300 ease-in-out ${
          isSidebarOpen ? "ml-64" : "ml-20"
        }`}
      >
        <header className="bg-white shadow-sm p-4 flex items-center justify-between z-0 relative">
          <div className="flex items-center gap-4 ml-auto">
            <div className="relative">
              <input
                type="text"
                placeholder="Search..."
                className="pl-10 pr-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-[#FF851B] text-sm"
              />
              <RiSearchLine className="w-5 h-5 absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" />
            </div>
            <div className="w-10 h-10 bg-[#FF851B]/10 rounded-full flex items-center justify-center">
              <RiUserLine className="w-6 h-6 text-[#FF851B]" />
            </div>
          </div>
        </header>
        <main className="p-6 flex-1">
          <Outlet /> {/* This renders the nested route content */}
        </main>
      </div>
    </div>
  );
}

#2
import React from "react";
import { RiShoppingBagLine } from "react-icons/ri";

export default function Dashboard() {
  return (
    <>
      <h1 className="text-2xl font-bold text-gray-800 mb-6">Dashboard</h1>
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
        {[
          { title: "Total Sales", value: "$24,500" },
          { title: "New Orders", value: "142" },
          { title: "Customers", value: "1,234" },
        ].map((stat) => (
          <div
            key={stat.title}
            className="bg-white p-6 rounded-xl shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-200"
          >
            <h3 className="text-sm font-medium text-gray-600">{stat.title}</h3>
            <p className="text-2xl font-bold mt-2 text-[#FF851B]">{stat.value}</p>
          </div>
        ))}
      </div>
      <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
        <h2 className="text-lg font-semibold text-gray-800 mb-4">Recent Activity</h2>
        <div className="space-y-4">
          {[1, 2, 3].map((item) => (
            <button
              key={item}
              className="w-full flex items-center gap-4 p-3 hover:bg-gray-50 rounded-lg transition-colors duration-200 cursor-pointer"
            >
              <div className="w-10 h-10 bg-[#FF851B]/10 rounded-full flex items-center justify-center">
                <RiShoppingBagLine className="w-5 h-5 text-[#FF851B]" />
              </div>
              <div className="text-left">
                <p className="text-sm font-medium text-gray-800">New Order #{item}234</p>
                <p className="text-xs text-gray-500">2 minutes ago</p>
              </div>
            </button>
          ))}
        </div>
      </div>
    </>
  );
}

#3
      {/* Admin Routes (Protected with role check if needed) */}
      <Route element={<ProtectedRoute allowedRoles={["admin"]} />}>
        <Route path="/admin" element={<AdminPanel />}>
          <Route index element={<Dashboard />} />
          <Route path="products" element={<Products />} />
          <Route path="customers" element={<Customers />} />
          <Route path="analytics" element={<Analytics />} />
          <Route path="settings" element={<Settings />} />
        </Route>
      </Route>
    </Routes>
